
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>Laravel on Fransiscus Rolanda Malau</title>
   <link>https://ndomalau.netlify.app/categories/laravel/</link>
   <description>Recent content in Laravel on Fransiscus Rolanda Malau</description>
   <generator>Hugo -- gohugo.io</generator>
   <copyright>Copyright &amp;copy; 2020 - Fransiscus Rolanda Malau</copyright>
   <lastBuildDate>Wed, 10 Feb 2021 12:31:39 +0700</lastBuildDate>
   
       <atom:link href="https://ndomalau.netlify.app/categories/laravel/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>MySQL Fix Incorrect datetime value: ‘0000–00–00 00:00:00’</title>
       <link>https://ndomalau.netlify.app/posts/mysql-fix-incorrect-datetime-value-00000000-000000/</link>
       <pubDate>Fri, 01 Apr 2022 12:31:39 +0700</pubDate>
       
       <guid>https://ndomalau.netlify.app/posts/mysql-fix-incorrect-datetime-value-00000000-000000/</guid>
       <description>&lt;h2 id=&#34;solution-&#34;&gt;Solution :&lt;/h2&gt;&lt;p&gt;If this is something you will encounter more often than once or twice, such as regular database synchronizations with another host or a dumped SQL file to be used more than once, then you may want to set the above SQL mode permanently to avoid the incorrect datetime value error.&lt;/p&gt;&lt;p&gt;In that case, simply edit your mysql.cnf options file, find the section starting with “[mysql]” (without quotes), and then after the [mysql] line add the following:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[mysqld]sql_mode=&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Open the mysql.cnf&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo nano /etc/mysql/mysql.cnf&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Save the file, and restart MySQL.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo service mysql restart&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Thank you and hope it is useful.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>Implementasi FizzBuzz</title>
       <link>https://ndomalau.netlify.app/posts/implementasi-fizzbuzz/</link>
       <pubDate>Tue, 27 Apr 2021 12:31:39 +0700</pubDate>
       
       <guid>https://ndomalau.netlify.app/posts/implementasi-fizzbuzz/</guid>
       <description>&lt;p&gt;**FizzBuzz &lt;em&gt;&lt;em&gt;Sederhananya adalah sebuah permainan menghitung, namun apabila ada peserta yang kebagian angka tiga dan kelipatannya maka peserta menyebutkan “Fizz” sebagai ganti angkanya sedangkan untuk angka lima dan kelipatannya peserta menyebut “Buzz” sebagai ganti angkanya. Terakhir jika angka tersebut adalah kelipatan dari tiga dan lima maka peserta menyebutkan “FizzBuzz” sebagai ganti angkanya&lt;/em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Ini adalah contoh implementasi **FizzBuzz **menggunakan bahasa pemrograman &lt;strong&gt;PHP.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/2636/1*6e1Sv8XV-3cEXhV3j8FB_Q.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;Kita perlu meletakkan 3 &amp;amp; 5 di awal agar saat ada angka yang habis dibagi 3 dan 5, maka akan ditampilkan &lt;strong&gt;FizzBuzz&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Terima Kasih dan Semoga Bermanfaat.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>Memastikan cara penulisan kode Laravel seragam dan mengikuti standar dengan PHP CS Fixer</title>
       <link>https://ndomalau.netlify.app/posts/memastikan-cara-penulisan-kode-laravel-seragam-dan-mengikuti-standar-dengan-php-cs-fixer/</link>
       <pubDate>Wed, 10 Feb 2021 12:31:39 +0700</pubDate>
       
       <guid>https://ndomalau.netlify.app/posts/memastikan-cara-penulisan-kode-laravel-seragam-dan-mengikuti-standar-dengan-php-cs-fixer/</guid>
       <description>&lt;h2 id=&#34;pengantar&#34;&gt;Pengantar&lt;/h2&gt;&lt;p&gt;Kali ini saya akan menunjukkan cara menggunakan tool &lt;a href=&#34;https://github.com/FriendsOfPHP/PHP-CS-Fixer&#34;&gt;PHP Coding Standards Fixer (PHP CS Fixer)&lt;/a&gt; di proyek aplikasi &lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; kalian. Jika sebelumnya kalian ingin cara penulisan kodenya mengikuti standar pengkodean PHP seperti yang didefinisikan dalam PSR-1, PSR-2, dll, atau seragam antar programmer meskipun menggunakan IDE/editor yang berbeda, maka tutorial ini bisa sangat ngebantu.&lt;/p&gt;&lt;h2 id=&#34;persyaratan&#34;&gt;Persyaratan&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Versi minimum &lt;a href=&#34;https://www.php.net&#34;&gt;PHP&lt;/a&gt; yang digunakan harus PHP 5.6.0.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Pastikan teman-teman menjalankan perintah-perintah berikut didalam proyek &lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; kalian ya.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;instalasi&#34;&gt;Instalasi&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;composer require friendsofphp/php-cs-fixer --dev&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;konfigurasi&#34;&gt;Konfigurasi&lt;/h2&gt;&lt;p&gt;Menentukan aturan yang ingin digunakan dalam proyek &lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; kalian:&lt;/p&gt;&lt;p&gt;Buat file &lt;em&gt;.php_cs&lt;/em&gt; di direktori root proyek kalian, dan gunakan contoh aturan ini: &lt;a href=&#34;https://gist.github.com/FransiscusRolandaMalau/41d5c147dc4a7ff8dd1a02edb2bdabdf&#34;&gt;*Laravel Coding Style Ruleset&lt;/a&gt;*.&lt;/p&gt;&lt;p&gt;Jangan lupa untuk menambahkan &lt;em&gt;.php_cs.cache&lt;/em&gt; ke file *gitignore *kalian ya.&lt;/p&gt;&lt;h2 id=&#34;pemakaian&#34;&gt;Pemakaian&lt;/h2&gt;&lt;p&gt;Melakukan perbaikan secara otomatis:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;vendor/bin/php-cs-fixer fix --allow-risky=yes --diff&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Untuk melakukan pengecekan saja tanpa perbaikan, tambahkan opsi &amp;ndash;dry-run:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;vendor/bin/php-cs-fixer fix --allow-risky=yes --diff --dry-runvendor/bin/php-cs-fixer fix --allow-risky=yes --diff --dry-run&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;penutup&#34;&gt;Penutup&lt;/h2&gt;&lt;p&gt;Dalam tutorial sederhana ini, kita telah memastikan cara penulisan kode &lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; kita mengikuti standar dengan menggunakan PHP CS Fixer. Selain itu, kalian juga dapat membagikan file gaya aturan kalian (.php_cs) ke teman-teman kalian agar gaya kode kalian seragam.&lt;/p&gt;&lt;p&gt;Semoga tutorial ini bisa membatu:).&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>Apa Perbedaan Data dan Basis Data</title>
       <link>https://ndomalau.netlify.app/posts/apa-perbedaan-data-dan-basis-data/</link>
       <pubDate>Thu, 04 Feb 2021 12:31:39 +0700</pubDate>
       
       <guid>https://ndomalau.netlify.app/posts/apa-perbedaan-data-dan-basis-data/</guid>
       <description>&lt;h3 id=&#34;apakah-data-itu-ada-beberapa-definisi-tentang-data-antara-lain&#34;&gt;Apakah data itu? Ada beberapa definisi tentang data, antara lain:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Data adalah fakta atau observasi mentah yang biasanya mengenai fenomena fisik atau transaksi bisnis.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Lebih khusus lagi, data adalah ukuran objektif dan atribut (karakteristik) dari entitas, seperti orang-orang, tempat, benda, atau kejadian.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Representasi fakta yang mewakili suatu objek, seperti pelanggan, karyawan, mahasiswa, dan lain-lain, yang disimpan dalam bentuk angka, huruf, simbol, text, gambar, bunyi, dan kombinasinya.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;kemudian-apakah-basis-data-itu-berikut-beberapa-pengertian-tentang-basis-data-yaitu&#34;&gt;Kemudian, apakah basis data itu? Berikut beberapa pengertian tentang basis data, yaitu:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Kumpulan terpadu dari elemen data logis yang saling berhubungan. Basis data mengonsolidasi banyak catatan yang sebelumnya disimpan dalam file terpisah.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Merupakan suatu kumpulan data yang berhubungan secara logis dan deskripsi data tersebut, yang dirancang untuk memenuhi informasi yang dibutuhkan oleh suatu organisasi. Artinya, basis data merupakan tempat penyimpanan data yang besar, di mana dapat digunakan oleh banyak pengguna. Seluruh item basis data tidak lagi dimiliki oleh satu departemen, melainkan menjadi sumber daya perusahaan yang dapat digunakan bersama.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>Tutorial Laravel Mix</title>
       <link>https://ndomalau.netlify.app/posts/tutorial-laravel-mix/</link>
       <pubDate>Sat, 17 Oct 2020 12:31:39 +0700</pubDate>
       
       <guid>https://ndomalau.netlify.app/posts/tutorial-laravel-mix/</guid>
       <description>&lt;h2 id=&#34;pengantar&#34;&gt;Pengantar&lt;/h2&gt;&lt;p&gt;Dalam tutorial ini saya akan menunjukkan cara menggunakan Laravel Mix diaplikasi Laravel Teman-teman. Jika Teman-teman yang udah pake Laravel cuman masih belum tau apa itu Laravel Mix atau udah tau cuman masih belum terlalu paham cara penggunaannya semoga tutorial bisa ngebantu teman-teman sekalian yaa.&lt;/p&gt;&lt;h2 id=&#34;apa-itu-laravel-mix&#34;&gt;Apa itu Laravel Mix?&lt;/h2&gt;&lt;p&gt;Menurut &lt;a href=&#34;https://laravel.com/docs/8.x/mix&#34;&gt;Laravel’s Offical Documentation&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Laravel Mix provides a fluent API for defining Webpack build steps for your Laravel application using several common CSS and JavaScript pre-processors.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Singkatnya ginilah: Laravel Mix itu sebuah package frontend yang disiapkan untuk manajemen asset di Laravel. Asset yang dimasud bisa berupa CSS, JS, Image, Font, dan lain-lain.&lt;/p&gt;&lt;h2 id=&#34;proses-instalasi-laravel-mix&#34;&gt;Proses Instalasi Laravel Mix&lt;/h2&gt;&lt;p&gt;Dalam instalasi baru Laravel, Teman-teman akan menemukan file package.json diroot struktur direktori Anda. File default ini akan menyertakan semua yang Teman-teman butuhkan untuk memulai. Pastikan juga telah menginstal NPM diserver local kita ya.Atau Teman-teman dapat menginstal dependensi yang direferensikan dengan menjalankan:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;menjalankan-mix&#34;&gt;Menjalankan Mix&lt;/h2&gt;&lt;p&gt;Mix adalah lapisan konfigurasi di atas Webpack, jadi untuk menjankannya Teman-teman hanya perlu menjalankan salah satu skrip NPM berikut:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// menggabungkan tanpa minify…npm run dev// jika ingin yang terminify..npm run production&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;melihat-assets-yang-melakukan-perubahan&#34;&gt;Melihat Assets yang Melakukan Perubahan&lt;/h2&gt;&lt;p&gt;Perintah npm run watch akan terus berjalan diterminal Teman-teman dan melihat semua perubahan pada file yang relevan. Webpack kemudian akan secara otomatis mengompilasi ulang asset Teman-teman ketika mendeteksi perubahan.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;npm run watch&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mari-memulai-dari-stylesheets&#34;&gt;Mari Memulai dari Stylesheets&lt;/h2&gt;&lt;p&gt;File webpack.mix.js adalah untuk kompilasi asset. Anggap saja sebagai konfigurasi ringan Webpack.&lt;/p&gt;&lt;h3 id=&#34;sass&#34;&gt;Sass&lt;/h3&gt;&lt;p&gt;mix.sass memungkinkan Teman-teman untuk mengkompilasi Sass ke dalam CSS. Teman-teman dapat menggunakan seperti ini:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.sass(&#39;resources/sass/app.scss&#39;, &#39;public/css&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Kalo lebih dari satu:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.sass(&#39;resources/sass/app.sass&#39;, &#39;public/css&#39;)    .sass(&#39;resources/sass/admin.sass&#39;, &#39;public/css/admin&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;plain-css&#34;&gt;Plain Css&lt;/h3&gt;&lt;p&gt;Jika Teman-teman ingin menggabungkan beberapa CSS biasa menjadi satu file juga bisa, gini caranya:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.styles([    &#39;resources/assets/vendor/css/bootstrap.min.css&#39;,    &#39;resources/assets/vendor/css/owl.carousel.min.css&#39;,    &#39;resources/assets/vendor/css/owl.theme.default.min.css&#39;,    &#39;resources/assets/vendor/css/slick.css&#39;,    &#39;resources/assets/vendor/css/slick-theme.css&#39;], &#39;public/css/vendor.css&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;kita-lanjut-dengan-javascript&#34;&gt;Kita lanjut dengan JavaScript&lt;/h2&gt;&lt;p&gt;Gimana kalo untuk file JavaScript? tinggal gini aja nanti dia akan mengompilasi kode JSnya.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.js(&#39;resoureces/app.js&#39;, &#39;public/js&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Kalo beberapa JS juga biasa menjadi satu file juga bisa, gini caranya:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.scripts([    &#39;resources/assets/vendor/js/jquery-3.5.1.min.js&#39;,    &#39;presources/assets/vendor/js/bootstrap.bundle.min.js&#39;], &#39;public/js/vendor.js&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;copy-file-atau-direktori&#34;&gt;Copy File atau Direktori&lt;/h2&gt;&lt;p&gt;Untuk copy file atau direktori juga bisa, contoh dibawah adalah memindahkan beberapa file font dari folder node_modules ke lokasi lain.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.copy(&#39;node_modules/font-awesome/fonts/*&#39;, &#39;public/fonts/&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Kalo untuk mindahin folder pake yang ini.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.copyDirectory(‘resources/img’, ‘public/img’);&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;versioning&#34;&gt;Versioning&lt;/h2&gt;&lt;p&gt;Nah ada lagi nih fitur versioning yang secara otomatis bakal nambahin hash unik ke nama file yang kita kompilasi, dan juga untuk merecord versi asset sehingga ketika ada perubahan nggak akan ngecache di browser client&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mix.js(&#39;resources/js/app.js&#39;, &#39;public/js&#39;)    .version();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Kalo semua pengen diversioning pas production bisa pake cara ini.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;if (mix.inProduction()) { mix.version}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Semoga tutorial ini bisa membatu Teman-teman.&lt;/p&gt;</description>
     </item>
   
 </channel>
</rss>
